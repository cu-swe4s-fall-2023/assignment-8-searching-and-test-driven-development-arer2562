# Define the final target rule
rule all:
    input:
        'Argentina.png',
        'Agrofood_co2_emission.csv',
        'IMF_GDP.csv'

# Define the rule to download data using wget
rule download_data:
    output:
        csv1 = "Agrofood_co2_emission.csv",
        csv2 = "IMF_GDP.csv"
    shell:
        "wget -O {output.csv1} 'https://docs.google.com/uc?export=download&id=1Wytf3ryf9EtOwaloms8HEzLG0yjtRqxr'; "
        "wget -O {output.csv2} 'https://docs.google.com/uc?export=download&id=1tuoQ9UTW_XRKgBOBaTLtGXh8h0ytKvFp'"

# Define the rule to process data with get_fire.py
rule process_data:
    input:
        csv1 = 'Agrofood_co2_emission.csv',
        csv2 = 'IMF_GDP.csv'
    output:
        txt = 'Argentina.txt',
        png = 'Argentina.png'
    params:
        target_country = 'Argentina',
        fire_year_col = 1,
        fire_savanna_col = 2,
        fire_forest_col = 3,
        fire_Co2_col = 29
    shell:
        " python get_fire.py" 
        " {input.csv1}"
        " {params.fire_year_col}" 
        " {params.fire_savanna_col}"
        " {params.fire_forest_col}" 
        " {params.fire_Co2_col}" 
        " {input.csv2}"
        " {params.target_country}"
        " {output.txt}"
        " {output.png}"
        
# Define the rule to create a scatter plot with scatter.py
#rule create_scatter_plot:
#    input:
#        infile = "Argentina.txt"
#    output:
#        "Argentina.png"
#    params:
#        country = "Argentina"
#    shell:
#        "python fire_gdp.py scat {input.infile} {params.country} {output}"

 
        
    